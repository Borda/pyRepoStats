name: Install pkg

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on: # Trigger the workflow on push or pull request, but only for the master branch
  push: {}
  pull_request:
    branches: [main]

defaults:
  run:
    shell: bash

jobs:
  pkg-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Check package
        run: |
          pip install -q check-manifest
          check-manifest
          python setup.py check --metadata --strict

      - name: Create package
        run: |
          pip install -q --upgrade setuptools wheel
          python setup.py sdist bdist_wheel

      - name: Verify package
        run: |
          pip install twine==3.2
          twine check dist/*

      - name: Upload the share store
        uses: actions/upload-artifact@v3
        with:
          name: dist-packages-${{ github.sha }}
          path: dist/

  pkg-install:
    needs: pkg-check
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        python-version: ["3.10"]
        pkg-dist: [".tar.gz", ".whl"]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Fetch the share store
        uses: actions/download-artifact@v3
        with:
          name: dist-packages-${{ github.sha }}
          path: dist/
      - name: show packages
        working-directory: dist/
        run: echo "PKG_FILE=$(ls *${{ matrix.pkg-dist }} | head -n1)" >> $GITHUB_ENV

      - name: Install package
        run: |
          pip install "dist/${PKG_FILE}"
          python -c "import repo_stats ; print(repo_stats.__version__)"

  install-guardian:
    runs-on: ubuntu-latest
    needs: [pkg-install, pkg-check]
    if: always()
    steps:
      - run: echo "${{ needs.pkg-install.result }}"
      - name: failing...
        if: needs.pkg-install.result == 'failure'
        run: exit 1
      - name: cancelled or skipped...
        if: contains(fromJSON('["cancelled", "skipped"]'), needs.pkg-install.result)
        timeout-minutes: 1
        run: sleep 90
